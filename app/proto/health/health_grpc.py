# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: app/proto/health/health.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client

if typing.TYPE_CHECKING:
    import grpclib.server

import app.proto.health.health_pb2


class HealthBase(abc.ABC):
    @abc.abstractmethod
    async def Check(
        self,
        stream: "grpclib.server.Stream[app.proto.health.health_pb2.HealthRequest, app.proto.health.health_pb2.HealthResponse]",
    ) -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            "/health.Health/Check": grpclib.const.Handler(
                self.Check,
                grpclib.const.Cardinality.UNARY_UNARY,
                app.proto.health.health_pb2.HealthRequest,
                app.proto.health.health_pb2.HealthResponse,
            ),
        }


class HealthStub:
    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Check = grpclib.client.UnaryUnaryMethod(
            channel,
            "/health.Health/Check",
            app.proto.health.health_pb2.HealthRequest,
            app.proto.health.health_pb2.HealthResponse,
        )
