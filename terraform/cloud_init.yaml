#cloud-config

write_files:
  # setup proxy service for database connections from enclave to supabase
  - path: /etc/systemd/system/db-socat-proxy.service
    owner: root:root
    permissions: '0644'
    content: |
      [Unit]
      Description=DB Socat Proxy
      After=network-online.target
      DefaultDependencies=no

      [Service]
      Type=simple
      StandardOutput=journal
      StandardError=journal
      SyslogIdentifier=db-socat-proxy
      ExecStart=/bin/bash -ce "exec /usr/local/bin/socat vsock-listen:8001,fork,reuseaddr tcp-connect:aws-0-us-east-1.pooler.supabase.com:5432"
      Restart=always
      TimeoutSec=0

      [Install]
      WantedBy=multi-user.target

  # setup proxy service for llm traffic between enclave and outside world
  - path: /etc/systemd/system/llm-socat-proxy.service
    owner: root:root
    permissions: '0644'
    content: |
      [Unit]
      Description=LLM Socat Proxy
      After=network-online.target
      DefaultDependencies=no

      [Service]
      Type=simple
      StandardOutput=journal
      StandardError=journal
      SyslogIdentifier=llm-socat-proxy
      ExecStart=/bin/bash -ce "exec /usr/local/bin/socat tcp-listen:50051,fork,reuseaddr VSOCK-CONNECT:22:8000"
      Restart=always
      TimeoutSec=0

      [Install]
      WantedBy=multi-user.target

runcmd:
  - |
    # base system setup
    sudo dnf install -y epel-release
    sudo dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
    
    # install nitro enclave tools
    sudo dnf install aws-nitro-enclaves-cli -y
    sudo dnf install aws-nitro-enclaves-cli-devel -y
    
    # dev tools and python 3.12
    sudo dnf install -y git cmake3 gcc make gcc-c++ ninja-build python3.12-devel
    
    # set python 3.12 as default
    sudo alternatives --set python /usr/bin/python3.12
    
    # add users to necessary groups
    sudo usermod -aG ne ec2-user
    sudo usermod -aG docker ec2-user

    # docker setup
    sudo systemctl start docker
    sudo systemctl enable docker

    # install socat from source (needed for vsock)
    wget http://www.dest-unreach.org/socat/download/socat-1.8.0.2.tar.gz -P /tmp
    cd /tmp && tar xzf socat-1.8.0.2.tar.gz
    cd socat-1.8.0.2
    ./configure && make && sudo make install
    cd ~ && rm -rf /tmp/socat-1.8.0.2 /tmp/socat-1.8.0.2.tar.gz
    
    # clone and build your app
    cd /home/ec2-user
    if [ ! -d "mew" ]; then
      git clone https://github.com/endorin-labs/mew.git
    else
      cd mew && git pull origin main && cd ..
    fi
    
    cd mew
    # build docker images
    sudo docker build -t enclave_base enclaves/enclave_base
    sudo docker build -t enclave .

#    look at ACM provisioning before this
#    nitro-cli build-enclave --output-path enclave.eif --docker-uri enclave

  # start the proxy services
  - systemctl daemon-reload
  - systemctl enable db-socat-proxy.service
  - systemctl enable llm-socat-proxy.service
  - systemctl reload-or-restart db-socat-proxy.service
  - systemctl reload-or-restart llm-socat-proxy.service